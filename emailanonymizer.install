<?php

/**
 * Implements hook_install(). 
 */
function emailanonymizer_install() {

  drupal_install_schema('emailanonymizer');
}

/**
 * Implements hook_uninstall(). 
 */
function emailanonymizer_uninstall() {

  drupal_uninstall_schema('emailanonymizer');
}

/**
 * Implements hook_schema(). 
 */
function emailanonymizer_schema() {
  $items = array();

  $items['emailanonymizer_email_mapping'] = emailanonymizer_table_email_mapping();

  return $items;
}

function emailanonymizer_table_email_mapping() {
  return array(
      'description' => t('TODO: please describe this table!'),
      'fields' => array(
          'id' => array(
              'description' => t('TODO: please describe this field!'),
              'type' => 'serial',
              'not null' => TRUE,
          ),
          'created' => array(
              'description' => t('TODO: please describe this field!'),
              'type' => 'int',
              'not null' => TRUE,
          ),
          'sender_name' => array(
              'description' => t('TODO: please describe this field!'),
              'type' => 'varchar',
              'length' => '255',
              'not null' => TRUE,
          ),
          'original_email' => array(
              'description' => t('TODO: please describe this field!'),
              'type' => 'varchar',
              'length' => '255',
              'not null' => TRUE,
          ),
          'encoded_email' => array(
              'description' => t('TODO: please describe this field!'),
              'type' => 'varchar',
              'length' => '255',
              'not null' => TRUE,
          ),
          'ref_id' => array(
              'description' => t('Referenced entity id'),
              'type' => 'int',
              'not null' => TRUE,
          ),
          'ref_type' => array(
              'description' => t('Referenced entity type'),
              'type' => 'varchar',
              'length' => '60',
              'not null' => TRUE,
          ),
      ),
      'primary key' => array('id'),
      'unique keys' => array(
          'uq_email_mapping_encoded' => array('encoded_email'),
      ),
  );
}

/**
 * Add "ref_id" and "ref_type" fields to email mapping table.
 * Add unique index on encoded_email field of email mapping table.
 */
function emailanonymizer_update_6000() {
  $items = array();

  $items[] = update_sql("ALTER TABLE {emailanonymizer_email_mapping} ADD COLUMN ref_id INT NOT NULL DEFAULT 0");
  $items[] = update_sql("ALTER TABLE {emailanonymizer_email_mapping} ADD COLUMN ref_type VARCHAR(60) NOT NULL");
  $items[] = update_sql("CREATE UNIQUE INDEX uq_email_mapping_encoded ON {emailanonymizer_email_mapping} (encoded_email)");

  return $items;
}