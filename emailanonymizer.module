<?php

module_load_include('inc', 'emailanonymizer', 'includes/util');
module_load_include('inc', 'emailanonymizer', 'includes/forms');

/**
 * Implements hook_perm(). 
 */
function emailanonymizer_perm() {
  $items = array();

  $items[] = 'administer email anonymizer';
  $items[] = 'use email anonymizer routing page';

  return $items;
}

/**
 * Implements hook_cron(). 
 */
function emailanonymizer_cron() {
  emailanonymizer_do_email_routing();
}

/**
 * Implements hook_menu(). 
 */
function emailanonymizer_menu() {
  $items = array();

  $items['admin/settings/emailanonymizer'] = array(
      'title' => 'Email Anonymizer',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('emailanonymizer_admin_settings_form'),
      'access arguments' => array('administer email anonymizer'),
      'file' => 'includes/admin.inc',
  );

  $items['admin/build/emailanonymizer/routing'] = array(
      'title' => 'Email Anonymizer Routing',
      'page callback' => 'emailanonymizer_page_email_routing',
      'access arguments' => array('use email anonymizer routing page'),
      'file' => 'includes/pages.inc',
  );

  return $items;
}

function emailanonymizer_theme() {
  $items = array();

  $items['emailanonymizer_contact_link'] = array(
      'arguments' => array('record' => NULL),
      'file' => 'includes/theme.inc',
  );

  return $items;
}

function emailanonymizer_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'comment_form') {

    if (user_is_anonymous()) {
      $path = drupal_get_path("module", "emailanonymizer");
      drupal_add_js($path . '/js/emailanonymizer_comment.js');

      $form['contact_pref'] = array(
          '#type' => 'radios',
          '#title' => t('Would you like to allow people to contact you?'),
          '#options' => array(
              'no_contact' => t('Do not allow people to contact me'),
              'no_anonymize' => t('Show my name and email address'),
              'anonymize' => t('Hide my contact info, but show an anonymized email address that people can use to contact me'),
          ),
          '#weight' => -1000,
          '#default_value' => 'no_contact',
          '#description' => t('An anonymized email address is a safe, secure way for people to contact you.  You will receive emails at your normal email address, but nobody will see your real email address.'),
      );


//      $form['expose_fake_email'] = array(
//          '#type' => 'checkbox',
//          '#title' => t('Generate an anonymized email address and allow people to contact me that way'),
//          '#description' => t('Your anonymized email is a safe, secure way for people to contact you.  You will receive emails at your normal email address, but nobody will see your real email address.'),
//      );

      unset($form['mail']['#description']);
      unset($form['homepage']);
    }
  }
  elseif ($form_id == $form['type']['#value'] . '_node_form') {
    $node_options = variable_get('node_options_' . $form['type']['#value'], array('status', 'promote'));
    $allow_anonymization = in_array('allow_anonymization', $node_options) && user_is_anonymous();
    if ($allow_anonymization) {

      $path = drupal_get_path("module", "emailanonymizer");
      drupal_add_js($path . '/js/emailanonymizer_node.js');
      drupal_add_css($path . '/css/emailanonymizer.css');

      $form['anonymize'] = array(
          '#type' => 'fieldset',
          '#title' => t('Contact Preferences'),
      );

      $form['anonymize']['contact_pref'] = array(
          '#type' => 'radios',
          '#title' => t('Would you like to allow people to contact you?'),
          '#options' => array(
              'no_contact' => t('Do not allow people to contact me'),
              'no_anonymize' => t('Show my name and email address'),
              'anonymize' => t('Hide my contact info, but show an anonymized email address that people can use to contact me'),
          ),
          '#default_value' => 'no_contact',
          '#description' => t('An anonymized email address is a safe, secure way for people to contact you.  You will receive emails at your normal email address, but nobody will see your real email address.'));

      $form['anonymize']['name'] = array(
          '#type' => 'textfield',
          '#size' => 60,
          '#title' => t('Name')
      );

      $form['anonymize']['email_to_anonymize'] = array(
          '#type' => 'textfield',
          '#size' => 60,
          '#title' => t('Email'),
          '#description' => t('Your email address will be disguised with a randomly-generated email address.  People will be able to contact you without your emial address being exposed.'));
    }
  }
  elseif ($form_id == 'node_type_form') {
    $form['workflow']['node_options']['#options']['allow_anonymization'] = t('Allow anonymization');
  }
}

function emailanonymizer_comment(&$a1, $op) {
  switch ($op) {
    case 'insert':
      if ($a1['contact_pref'] != 'no_contact') {
        $name = $a1['name'];
        $original_email = $a1['mail'];
        $encoded_email = emailanonymizer_generate_address();
        $show_anonymized = ($a1['contact_pref'] == 'anonymize');
        $cid = $a1['cid'];
        $created = date("F j, Y, g:i a");
        $sql = 'INSERT INTO {emailanonymizer_email_mapping} (created, sender_name, original_email, encoded_email, ref_id, ref_type, show_anonymized) VALUES ("%d", "%s", "%s","%s", %d, "%s", %d)';
        db_query($sql, $created, $name, $original_email, $encoded_email, $cid, 'comment', $show_anonymized);

        if ($show_anonymized) {
          $a1['name'] = 'Anonymous';
        }
      }
      else {
        $a1['name'] = 'Anonymous';
        unset($a1['mail']);
      }

      comment_save($a1);
      break;
    case 'view':
      $anonymized = emailanonymizer_get_anonymized_email($a1->cid, 'comment');

      if ($anonymized) {
        $a1->comment .= theme('emailanonymizer_contact_link', $anonymized);
      }

      break;
  }
}

function emailanonymizer_nodeapi(&$node, $op) {
  switch ($op) {
    case 'insert':
      if ($node->contact_pref != 'no_contact') {
        $name = $node->name;
        $original_email = $node->email_to_anonymize;
        $encoded_email = emailanonymizer_generate_address();
        $show_anonymized = ($node->contact_pref == 'anonymize');
        $nid = $node->nid;
        $created = date("F j, Y, g:i a");
        $sql = 'INSERT INTO {emailanonymizer_email_mapping} (created, sender_name, original_email, encoded_email, ref_id, ref_type, show_anonymized) VALUES ("%d", "%s", "%s","%s", %d, "%s", %d)';
        db_query($sql, $created, $name, $original_email, $encoded_email, $nid, 'node', $show_anonymized);
      }
      break;
    case 'view':
      $anonymized = emailanonymizer_get_anonymized_email($node->nid, 'node');
      if ($anonymized) {
        $node->content['body']['#value'] .= theme('emailanonymizer_contact_link', $anonymized);
      }
      break;
  }
}
