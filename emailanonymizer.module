<?php

module_load_include('inc', 'emailanonymizer', 'includes/util');
module_load_include('inc', 'emailanonymizer', 'includes/forms');

/**
 * Implements hook_perm(). 
 */
function emailanonymizer_perm() {
  $items = array();

  $items[] = 'administer email anonymizer';
  $items[] = 'use email anonymizer routing page';

  return $items;
}

/**
 * Implements hook_cron(). 
 */
function emailanonymizer_cron() {
  emailanonymizer_do_email_routing();
}

/**
 * Implements hook_menu(). 
 */
function emailanonymizer_menu() {
  $items = array();

  $items['admin/settings/emailanonymizer'] = array(
      'title' => 'Email Anonymizer',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('emailanonymizer_admin_settings_form'),
      'access arguments' => array('administer email anonymizer'),
      'file' => 'includes/admin.inc',
  );

  $items['admin/build/emailanonymizer/routing'] = array(
      'title' => 'Email Anonymizer Routing',
      'page callback' => 'emailanonymizer_page_email_routing',
      'access arguments' => array('use email anonymizer routing page'),
      'file' => 'includes/pages.inc',
  );

  return $items;
}

function emailanonymizer_theme() {
  $items = array();

  $items['emailanonymizer_contact_link'] = array(
      'arguments' => array('record' => NULL),
      'file' => 'includes/theme.inc',
  );

  return $items;
}

function emailanonymizer_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'comment_form') {
    $form['#submit'][] = 'emailanonymizer_custom_comment_email_anonymization';
  }
}

function emailanonymizer_custom_comment_email_anonymization($form, &$form_state) {
  $name = $form_state['values']['name'];
  $original_email = $form_state['values']['mail'];
  $encoded_email = emailanonymizer_generate_address();
  $created = date("F j, Y, g:i a");
  db_query('INSERT INTO {emailanonymizer_email_mapping} (created, sender_name, original_email, encoded_email) VALUES ("%d", "%s", "%s","%s")', $created, $name, $original_email, $encoded_email);

  $form['expose_fake_email'] = array(
      '#type' => 'checkbox',
      '#title' => t('Generate a fake email address and allow people to contact me that way'),
      '#description' => t('Your "fake" email is a safe, secure way for people to contact you.  You will receive emails at your normal email address, but nobody will see your real email address.'),
  );
}

function emailanonymizer_comment(&$a1, $op) {
  switch ($op) {
    case 'insert':
      if ($a1['expose_fake_email']) {
        $name = $a1['name'];
        $original_email = $a1['mail'];
        $encoded_email = emailanonymizer_generate_address();
        $cid = $a1['cid'];
        $created = date("F j, Y, g:i a");
        $sql = 'INSERT INTO {emailanonymizer_email_mapping} (created, sender_name, original_email, encoded_email, ref_id, ref_type) VALUES ("%d", "%s", "%s","%s", %d, "%s")';
        db_query($sql, $created, $name, $original_email, $encoded_email, $cid, 'comment');
      }
      break;
    case 'view':
      $anonymized = emailanonymizer_get_anonymized_email($a1->cid, 'comment');

      if ($anonymized) {
        $a1->comment .= theme('emailanonymizer_contact_link', $anonymized);
      }

      break;
  }
}
